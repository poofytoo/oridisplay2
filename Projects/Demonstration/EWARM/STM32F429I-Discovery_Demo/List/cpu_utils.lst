###############################################################################
#
# IAR ANSI C/C++ Compiler V7.30.1.7746/W32 for ARM        23/Nov/2014  02:10:34
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\Core\Lib\cpu_utils.c
#    Command line =  
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\Core\Lib\cpu_utils.c
#        -D USE_STDPERIPH_DRIVER -D STM32F429_439xx -D USE_STM32F429I_DISCO -D
#        USE_USB_OTG_HS -D USE_EMBEDDED_PHY -lcN
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\STM32F429I-Discovery_Demo\List\
#        --diag_suppress Pe111,Pa082 -o
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\STM32F429I-Discovery_Demo\Obj\
#        --debug --endian=little --cpu=Cortex-M4F -e --fpu=VFPv4_sp
#        --dlib_config "C:\Program Files\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\Config\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\Core\Devices\STM32F4xx\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\Core\User\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\Core\Demo\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\Core\Lib\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\Core\Test_Program\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\..\..\Libraries\STM32_USB_HOST_Library\Core\inc\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\..\..\Libraries\STM32_USB_HOST_Library\Class\MSC\inc\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\..\..\Libraries\STM32_USB_Device_Library\Core\inc\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\..\..\Libraries\STM32_USB_Device_Library\Class\MSC\inc\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\..\..\Libraries\STM32_USB_Device_Library\Class\HID\inc\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\..\..\Libraries\STM32_USB_Device_Library\Class\Audio\inc\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\..\..\Libraries\STM32_USB_OTG_Driver\inc\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\..\..\Utilities\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\..\..\Utilities\Common\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\..\..\Utilities\STM32F429i-Discovery\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\..\..\Utilities\Third_Party\fat_fs\inc\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\..\..\Utilities\Third_Party\FreeRTOS\Source\portable\IAR\ARM_CM4F\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\..\..\Utilities\Third_Party\FreeRTOS\Source\include\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\..\..\Libraries\STemWinLibrary522_4x9i\inc\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\..\..\Libraries\STemWinLibrary522_4x9i\Config\
#        -Ohs --use_c++_inline -I "C:\Program Files\IAR Systems\Embedded
#        Workbench 7.0\arm\CMSIS\Include\"
#    List file    =  
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\STM32F429I-Discovery_Demo\List\cpu_utils.lst
#    Object file  =  
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\STM32F429I-Discovery_Demo\Obj\cpu_utils.o
#
###############################################################################

C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\Core\Lib\cpu_utils.c
      1          /**
      2            ******************************************************************************
      3            * @file    cpu_utils.c
      4            * @author  MCD Application Team
      5            * @version V1.0.1
      6            * @date    11-November-2013
      7            * @brief   Utilities for CPU management
      8            ******************************************************************************
      9            * @attention
     10            *
     11            * <h2><center>&copy; COPYRIGHT 2013 STMicroelectronics</center></h2>
     12            *
     13            * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
     14            * You may not use this file except in compliance with the License.
     15            * You may obtain a copy of the License at:
     16            *
     17            *        http://www.st.com/software_license_agreement_liberty_v2
     18            *
     19            * Unless required by applicable law or agreed to in writing, software 
     20            * distributed under the License is distributed on an "AS IS" BASIS, 
     21            * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     22            * See the License for the specific language governing permissions and
     23            * limitations under the License.
     24            *
     25            ******************************************************************************
     26            */ 
     27          
     28          /********************** IMPORTANT **********************************************
     29          To use this module, the following steps should be followed :
     30          
     31          1- in the FreeRTOSConfig.h file enable the following macros : 
     32                - #define configUSE_IDLE_HOOK	        1
     33                - #define configUSE_TICK_HOOK	        1
     34          
     35          2- in the FreeRTOSConfig.h define the following macros : 
     36                - #define traceTASK_SWITCHED_IN()  extern void StartIdleMonitor(void); \
     37                                                   StartIdleMonitor()
     38                - #define traceTASK_SWITCHED_OUT() extern void EndIdleMonitor(void); \
     39                                                   EndIdleMonitor()
     40          *******************************************************************************/
     41          
     42          
     43          /* Includes ------------------------------------------------------------------*/
     44          #include "cpu_utils.h"
     45          
     46          /* Private typedef -----------------------------------------------------------*/
     47          /* Private define ------------------------------------------------------------*/
     48          /* Private macro -------------------------------------------------------------*/
     49          /* Private function prototypes -----------------------------------------------*/
     50          /* Private variables ---------------------------------------------------------*/
     51          
     52          xTaskHandle                        xIdleHandle = NULL;
     53          __IO uint32_t                      FreeRTOS_CPU_Usage = 0; 
     54          uint32_t                           FreeRTOS_CPU_IdleStartTime = 0; 
     55          uint32_t                           FreeRTOS_CPU_IdleSpentTime = 0; 
     56          uint32_t                           FreeRTOS_CPU_TotalIdleTime = 0; 
     57          
     58          /* Private functions ---------------------------------------------------------*/
     59          /**
     60          * @brief  Application Idle Hook
     61          * @param  None 
     62          * @retval None
     63          */
     64          
     65          void vApplicationIdleHook(void) 
     66          {
     67            if( xIdleHandle == NULL )
     68            {
     69              /* Store the handle to the idle task. */
     70              xIdleHandle = xTaskGetCurrentTaskHandle();
     71            }
     72          }
     73          
     74          /**
     75          * @brief  Application Idle Hook
     76          * @param  None 
     77          * @retval None
     78          */
     79          void vApplicationTickHook (void)
     80          {
     81            static int tick = 0;
     82            
     83            if(tick ++ > CALCULATION_PERIOD)
     84            {
     85              tick = 0;
     86              
     87              if(FreeRTOS_CPU_TotalIdleTime > 1000)
     88              {
     89                FreeRTOS_CPU_TotalIdleTime = 1000;
     90                
     91              }
     92              FreeRTOS_CPU_Usage = (100 - (FreeRTOS_CPU_TotalIdleTime * 100) / CALCULATION_PERIOD);
     93              FreeRTOS_CPU_TotalIdleTime = 0;
     94            }
     95          }
     96          
     97          /**
     98          * @brief  Start Idle monitor
     99          * @param  None 
    100          * @retval None
    101          */
    102          void StartIdleMonitor (void)
    103          {
    104            if( xTaskGetCurrentTaskHandle() == xIdleHandle ) 
    105            {
    106              FreeRTOS_CPU_IdleStartTime = xTaskGetTickCount();
    107            }
    108          }
    109          
    110          /**
    111          * @brief  Stop Idle monitor
    112          * @param  None 
    113          * @retval None
    114          */
    115          void EndIdleMonitor (void)
    116          {
    117            if( xTaskGetCurrentTaskHandle() == xIdleHandle )
    118            {
    119              /* Store the handle to the idle task. */
    120              FreeRTOS_CPU_IdleSpentTime = xTaskGetTickCount() - FreeRTOS_CPU_IdleStartTime;
    121              FreeRTOS_CPU_TotalIdleTime += FreeRTOS_CPU_IdleSpentTime; 
    122            }
    123          }
    124          
    125          /**
    126          * @brief  Stop Idle monitor
    127          * @param  None 
    128          * @retval None
    129          */
    130          uint16_t FreeRTOS_GetCPUUsage (void)
    131          {
    132            return (uint16_t)FreeRTOS_CPU_Usage;
    133          }
    134          /************************ (C) COPYRIGHT STMicroelectronics *****END OF FILE****/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   EndIdleMonitor
         8   -> xTaskGetCurrentTaskHandle
         8   -> xTaskGetTickCount
       0   FreeRTOS_GetCPUUsage
       8   StartIdleMonitor
         8   -> xTaskGetCurrentTaskHandle
         8   -> xTaskGetTickCount
       8   vApplicationIdleHook
         8   -> xTaskGetCurrentTaskHandle
       0   vApplicationTickHook


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable4
      32  EndIdleMonitor
       8  FreeRTOS_GetCPUUsage
      22  StartIdleMonitor
      16  vApplicationIdleHook
      54  vApplicationTickHook
      24  xIdleHandle
          FreeRTOS_CPU_Usage
          FreeRTOS_CPU_IdleStartTime
          FreeRTOS_CPU_IdleSpentTime
          FreeRTOS_CPU_TotalIdleTime
          tick

 
  24 bytes in section .bss
 136 bytes in section .text
 
 136 bytes of CODE memory
  24 bytes of DATA memory

Errors: none
Warnings: none
