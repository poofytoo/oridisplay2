###############################################################################
#
# IAR ANSI C/C++ Compiler V7.30.1.7746/W32 for ARM        23/Nov/2014  02:10:47
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\Core\User\stm32xxx_it.c
#    Command line =  
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\Core\User\stm32xxx_it.c
#        -D USE_STDPERIPH_DRIVER -D STM32F429_439xx -D USE_STM32F429I_DISCO -D
#        USE_USB_OTG_HS -D USE_EMBEDDED_PHY -lcN
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\STM32F429I-Discovery_Demo\List\
#        --diag_suppress Pe111,Pa082 -o
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\STM32F429I-Discovery_Demo\Obj\
#        --debug --endian=little --cpu=Cortex-M4F -e --fpu=VFPv4_sp
#        --dlib_config "C:\Program Files\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\Config\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\Core\Devices\STM32F4xx\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\Core\User\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\Core\Demo\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\Core\Lib\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\Core\Test_Program\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\..\..\Libraries\STM32_USB_HOST_Library\Core\inc\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\..\..\Libraries\STM32_USB_HOST_Library\Class\MSC\inc\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\..\..\Libraries\STM32_USB_Device_Library\Core\inc\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\..\..\Libraries\STM32_USB_Device_Library\Class\MSC\inc\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\..\..\Libraries\STM32_USB_Device_Library\Class\HID\inc\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\..\..\Libraries\STM32_USB_Device_Library\Class\Audio\inc\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\..\..\Libraries\STM32_USB_OTG_Driver\inc\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\..\..\Utilities\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\..\..\Utilities\Common\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\..\..\Utilities\STM32F429i-Discovery\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\..\..\Utilities\Third_Party\fat_fs\inc\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\..\..\Utilities\Third_Party\FreeRTOS\Source\portable\IAR\ARM_CM4F\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\..\..\Utilities\Third_Party\FreeRTOS\Source\include\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\..\..\Libraries\STemWinLibrary522_4x9i\inc\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\..\..\Libraries\STemWinLibrary522_4x9i\Config\
#        -Ohs --use_c++_inline -I "C:\Program Files\IAR Systems\Embedded
#        Workbench 7.0\arm\CMSIS\Include\"
#    List file    =  
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\STM32F429I-Discovery_Demo\List\stm32xxx_it.lst
#    Object file  =  
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\STM32F429I-Discovery_Demo\Obj\stm32xxx_it.o
#
###############################################################################

C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\Core\User\stm32xxx_it.c
      1          /**
      2            ******************************************************************************
      3            * @file    stm32xxx_it.c
      4            * @author  MCD Application Team
      5            * @version V1.0.1
      6            * @date    11-November-2013
      7            * @brief   Exceptions Handlers
      8            ******************************************************************************
      9            * @attention
     10            *
     11            * <h2><center>&copy; COPYRIGHT 2013 STMicroelectronics</center></h2>
     12            *
     13            * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
     14            * You may not use this file except in compliance with the License.
     15            * You may obtain a copy of the License at:
     16            *
     17            *        http://www.st.com/software_license_agreement_liberty_v2
     18            *
     19            * Unless required by applicable law or agreed to in writing, software 
     20            * distributed under the License is distributed on an "AS IS" BASIS, 
     21            * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     22            * See the License for the specific language governing permissions and
     23            * limitations under the License.
     24            *
     25            ******************************************************************************
     26            */
     27          
     28          /* Includes ------------------------------------------------------------------*/
     29          #include "global_includes.h"
     30          #include "usb_hcd_int.h"
     31          #include "usbh_core.h"
     32          
     33          #include "test_program.h"
     34          #include "usb_core.h"
     35          #include "usbd_core.h"
     36          #include "usbd_hid_core.h"
     37          #include "usb_conf.h"
     38          
     39          /* Private typedef -----------------------------------------------------------*/
     40          /* Private define ------------------------------------------------------------*/
     41          /* Private macro -------------------------------------------------------------*/
     42          /* Private variables ---------------------------------------------------------*/
     43          extern __IO uint32_t TS_Pressed;
     44          extern uint32_t demo_mode;
     45          extern USB_OTG_CORE_HANDLE           USB_OTG_Core;
     46          extern USB_OTG_CORE_HANDLE           USB_OTG_dev;
     47          extern uint32_t USBD_OTG_ISR_Handler (USB_OTG_CORE_HANDLE *pdev);
     48          __IO uint32_t ButtonPressed = 0x00;
     49          extern uint32_t USBD_OTG_ISR_Handler (USB_OTG_CORE_HANDLE *pdev);
     50          extern __IO uint32_t PeriodValue;
     51          extern __IO uint32_t CaptureNumber;
     52          uint16_t tmpCC4[2] = {0, 0};
     53          /* Private function prototypes -----------------------------------------------*/
     54          extern void USB_OTG_BSP_TimerIRQ (void);
     55          extern void xPortSysTickHandler( void );
     56          extern void LTDC_ISR_Handler(void);
     57          extern void DMA2D_ISR_Handler(void);
     58          /* Private function prototypes -----------------------------------------------*/
     59          /* Private functions ---------------------------------------------------------*/
     60          
     61          /******************************************************************************/
     62          /*             Cortex-M Processor Exceptions Handlers                         */
     63          /******************************************************************************/
     64          
     65          /**
     66            * @brief  This function handles NMI exception.
     67            * @param  None
     68            * @retval None
     69            */
     70          void NMI_Handler(void)
     71          {}
     72          
     73          /**
     74            * @brief  This function handles Hard Fault exception.
     75            * @param  None
     76            * @retval None
     77            */
     78          void HardFault_Handler(void)
     79          {
     80            /* Go to infinite loop when Hard Fault exception occurs */
     81            while (1)
     82            {}
     83          }
     84          
     85          /**
     86            * @brief  This function handles Memory Manage exception.
     87            * @param  None
     88            * @retval None
     89            */
     90          void MemManage_Handler(void)
     91          {
     92            /* Go to infinite loop when Memory Manage exception occurs */
     93            while (1)
     94            {}
     95          }
     96          
     97          /**
     98            * @brief  This function handles Bus Fault exception.
     99            * @param  None
    100            * @retval None
    101            */
    102          void BusFault_Handler(void)
    103          {
    104            /* Go to infinite loop when Bus Fault exception occurs */
    105            while (1)
    106            {}
    107          }
    108          
    109          /**
    110            * @brief  This function handles Usage Fault exception.
    111            * @param  None
    112            * @retval None
    113            */
    114          void UsageFault_Handler(void)
    115          {
    116            /* Go to infinite loop when Usage Fault exception occurs */
    117            while (1)
    118            {}
    119          }
    120          
    121          /**
    122            * @brief  This function handles Debug Monitor exception.
    123            * @param  None
    124            * @retval None
    125            */
    126          void DebugMon_Handler(void)
    127          {}
    128          
    129          /**
    130            * @brief  This function handles SVCall exception.
    131            * @param  None
    132            * @retval None
    133            */
    134          void SVC_Handler(void)
    135          {}
    136          
    137          /**
    138            * @brief  This function handles PendSV_Handler exception.
    139            * @param  None
    140            * @retval None
    141            */
    142          void PendSV_Handler(void)
    143          {}
    144          
    145          /**
    146            * @brief  This function handles SysTick Handler.
    147            * @param  None
    148            * @retval None
    149            */
    150          void SysTick_Handler(void)
    151          {
    152          if(demo_mode == 0)
    153            xPortSysTickHandler();
    154          else  
    155            TimingDelay_Decrement();
    156          }
    157          
    158          /**
    159            * @brief  This function handles PPP interrupt request.
    160            * @param  None
    161            * @retval None
    162            */
    163          void EXTI0_IRQHandler(void)
    164          { 
    165            ButtonPressed = 0x01;
    166            
    167            EXTI_ClearITPendingBit(USER_BUTTON_EXTI_LINE);
    168          }
    169          /**
    170            * @brief  TIM2_IRQHandler
    171            *         This function handles Timer2 Handler.
    172            * @param  None
    173            * @retval None
    174            */
    175          
    176          void TIM2_IRQHandler(void)
    177          {
    178            USB_OTG_BSP_TimerIRQ();
    179          }
    180          
    181          /**
    182            * @brief  This function handles OTG_HS Handler.
    183            * @param  None
    184            * @retval None
    185            */
    186          void OTG_HS_IRQHandler(void)
    187          {
    188            if(demo_mode == 0)
    189            {
    190              USBH_OTG_ISR_Handler (&USB_OTG_Core);
    191            }
    192            else
    193            {
    194              USBD_OTG_ISR_Handler (&USB_OTG_dev);
    195            }
    196          }
    197          
    198          /**
    199            * @brief  This function handles TIM5 global interrupt request.
    200            * @param  None
    201            * @retval None
    202            */
    203          void TIM5_IRQHandler(void)
    204          {
    205            if (TIM_GetITStatus(TIM5, TIM_IT_CC4) != RESET)
    206            {    
    207              /* Get the Input Capture value */
    208              tmpCC4[CaptureNumber++] = TIM_GetCapture4(TIM5);
    209             
    210              /* Clear CC4 Interrupt pending bit */
    211              TIM_ClearITPendingBit(TIM5, TIM_IT_CC4);
    212          
    213              if (CaptureNumber >= 2)
    214              {
    215                /* Compute the period length */
    216                PeriodValue = (uint16_t)(0xFFFF - tmpCC4[0] + tmpCC4[1] + 1);
    217              }
    218            }
    219          }
    220          
    221          /**
    222            * @brief  This function handles DMA2 Stream1 global interrupt request.
    223            * @param  None
    224            * @retval None
    225            */
    226          
    227          void DMA2_Stream1_IRQHandler(void)
    228          {
    229          }
    230          
    231          /**
    232            * @brief  This function handles LTDC global interrupt request.
    233            * @param  None
    234            * @retval None
    235            */
    236          void LTDC_IRQHandler(void)
    237          {
    238            LTDC_ISR_Handler();
    239          }
    240          
    241          /**
    242            * @brief  This function handles DMA2D global interrupt request.
    243            * @param  None
    244            * @retval None
    245            */
    246          void DMA2D_IRQHandler(void)
    247          {
    248            DMA2D_ISR_Handler();
    249          }
    250          
    251          /************************ (C) COPYRIGHT STMicroelectronics *****END OF FILE****/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   BusFault_Handler
       0   DMA2D_IRQHandler
         0   -> DMA2D_ISR_Handler
       0   DMA2_Stream1_IRQHandler
       0   DebugMon_Handler
       0   EXTI0_IRQHandler
         0   -> EXTI_ClearITPendingBit
       0   HardFault_Handler
       0   LTDC_IRQHandler
         0   -> LTDC_ISR_Handler
       0   MemManage_Handler
       0   NMI_Handler
       0   OTG_HS_IRQHandler
         0   -> USBD_OTG_ISR_Handler
       0   PendSV_Handler
       0   SVC_Handler
       0   SysTick_Handler
         0   -> TimingDelay_Decrement
       0   TIM2_IRQHandler
         0   -> USB_OTG_BSP_TimerIRQ
      24   TIM5_IRQHandler
        24   -> TIM_ClearITPendingBit
        24   -> TIM_GetCapture4
        24   -> TIM_GetITStatus
       0   UsageFault_Handler


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable3_2
       4  ??DataTable3_3
       4  ??DataTable3_4
       4  ??DataTable3_5
       4  ??DataTable3_6
       4  ??DataTable3_7
       2  BusFault_Handler
       4  ButtonPressed
       4  DMA2D_IRQHandler
       2  DMA2_Stream1_IRQHandler
       2  DebugMon_Handler
      10  EXTI0_IRQHandler
       2  HardFault_Handler
       4  LTDC_IRQHandler
       2  MemManage_Handler
       2  NMI_Handler
      20  OTG_HS_IRQHandler
       2  PendSV_Handler
       2  SVC_Handler
      16  SysTick_Handler
       4  TIM2_IRQHandler
      66  TIM5_IRQHandler
       2  UsageFault_Handler
       4  tmpCC4

 
   8 bytes in section .bss
 174 bytes in section .text
 
 174 bytes of CODE memory
   8 bytes of DATA memory

Errors: none
Warnings: none
