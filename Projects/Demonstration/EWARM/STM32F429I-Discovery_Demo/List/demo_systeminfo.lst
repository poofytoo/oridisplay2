###############################################################################
#
# IAR ANSI C/C++ Compiler V7.30.1.7746/W32 for ARM        11/Nov/2014  12:36:54
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\Core\Demo\demo_systeminfo.c
#    Command line =  
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\Core\Demo\demo_systeminfo.c
#        -D USE_STDPERIPH_DRIVER -D STM32F429_439xx -D USE_STM32F429I_DISCO -D
#        USE_USB_OTG_HS -D USE_EMBEDDED_PHY -lcN
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\STM32F429I-Discovery_Demo\List\
#        --diag_suppress Pe111,Pa082 -o
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\STM32F429I-Discovery_Demo\Obj\
#        --debug --endian=little --cpu=Cortex-M4F -e --fpu=VFPv4_sp
#        --dlib_config "C:\Program Files\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\Config\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\Core\Devices\STM32F4xx\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\Core\User\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\Core\Demo\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\Core\Lib\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\Core\Test_Program\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\..\..\Libraries\STM32_USB_HOST_Library\Core\inc\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\..\..\Libraries\STM32_USB_HOST_Library\Class\MSC\inc\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\..\..\Libraries\STM32_USB_Device_Library\Core\inc\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\..\..\Libraries\STM32_USB_Device_Library\Class\MSC\inc\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\..\..\Libraries\STM32_USB_Device_Library\Class\HID\inc\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\..\..\Libraries\STM32_USB_Device_Library\Class\Audio\inc\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\..\..\Libraries\STM32_USB_OTG_Driver\inc\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\..\..\Utilities\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\..\..\Utilities\Common\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\..\..\Utilities\STM32F429i-Discovery\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\..\..\Utilities\Third_Party\fat_fs\inc\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\..\..\Utilities\Third_Party\FreeRTOS\Source\portable\IAR\ARM_CM4F\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\..\..\Utilities\Third_Party\FreeRTOS\Source\include\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\..\..\Libraries\STemWinLibrary522_4x9i\inc\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\..\..\Libraries\STemWinLibrary522_4x9i\Config\
#        -Ohs --use_c++_inline -I "C:\Program Files\IAR Systems\Embedded
#        Workbench 7.0\arm\CMSIS\Include\"
#    List file    =  
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\STM32F429I-Discovery_Demo\List\demo_systeminfo.lst
#    Object file  =  
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\STM32F429I-Discovery_Demo\Obj\demo_systeminfo.o
#
###############################################################################

C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\Core\Demo\demo_systeminfo.c
      1          /**
      2            ******************************************************************************
      3            * @file    demo_systeminfo.c
      4            * @author  MCD Application Team
      5            * @version V1.0.1
      6            * @date    11-November-2013
      7            * @brief   Demo system information
      8            ******************************************************************************
      9            * @attention
     10            *
     11            * <h2><center>&copy; COPYRIGHT 2013 STMicroelectronics</center></h2>
     12            *
     13            * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
     14            * You may not use this file except in compliance with the License.
     15            * You may obtain a copy of the License at:
     16            *
     17            *        http://www.st.com/software_license_agreement_liberty_v2
     18            *
     19            * Unless required by applicable law or agreed to in writing, software 
     20            * distributed under the License is distributed on an "AS IS" BASIS, 
     21            * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     22            * See the License for the specific language governing permissions and
     23            * limitations under the License.
     24            *
     25            ******************************************************************************
     26            */
     27          
     28          /* Includes ------------------------------------------------------------------*/
     29          #include "global_includes.h"
     30          #include "DIALOG.h"
     31          
     32          /* External variables --------------------------------------------------------*/
     33          extern GUI_CONST_STORAGE GUI_BITMAP bminfo[];
     34          
     35          /* Private typedef -----------------------------------------------------------*/
     36          /* Private defines -----------------------------------------------------------*/
     37          #define ID_FRAMEWIN_INFO   (GUI_ID_USER + 0x02)
     38          #define ID_IMAGE_INFO      (GUI_ID_USER + 0x03)
     39          #define ID_TEXT_BOARD       (GUI_ID_USER + 0x04)
     40          #define ID_TEXT_CORE       (GUI_ID_USER + 0x05)
     41          #define ID_TEXT_CPU       (GUI_ID_USER + 0x06)
     42          #define ID_TEXT_VERSION       (GUI_ID_USER + 0x07)
     43          #define ID_TEXT_COPYRIGHT       (GUI_ID_USER + 0x08)
     44          #define ID_BUTTON_INFO_CLOSE     (GUI_ID_USER + 0x09)
     45          
     46          /* Private macros ------------------------------------------------------------*/
     47          /* Private variables ---------------------------------------------------------*/
     48          
     49          /* Dialog resource using a WINDOW widget */
     50          static const GUI_WIDGET_CREATE_INFO _aDialog[] = {
     51            { FRAMEWIN_CreateIndirect, "System Information", ID_FRAMEWIN_INFO, 1, 0, 240, 320-20, WM_CF_STAYONTOP, 0 },
     52            { IMAGE_CreateIndirect, "Image", ID_IMAGE_INFO, 75, 6, 90, 90, 0, 0, 0 },  
     53            { TEXT_CreateIndirect, "Board : STM32F429I-DISCO", ID_TEXT_BOARD, 5, 120, 179, 23, 0, 0, 0 },
     54            { TEXT_CreateIndirect, "Core: CortexM4F", ID_TEXT_CORE, 5, 140, 226, 30, 0, 0, 0 },
     55            { TEXT_CreateIndirect, "CPU Speed : 168MHz", ID_TEXT_COPYRIGHT, 5, 160, 238, 22, 0, 0, 0 },  
     56            { TEXT_CreateIndirect, "Firmware Version : 1.0.1", ID_TEXT_CPU, 5, 180, 288, 38, 0, 0, 0 },
     57            { TEXT_CreateIndirect, "Copyright 2013 STMicroelectronics", ID_TEXT_VERSION, 5, 200, 323, 20, 0, 0, 0 },
     58            { BUTTON_CreateIndirect, "Close", ID_BUTTON_INFO_CLOSE, 80, 240, 80, 32, 0, 0, 0 },  
     59          };
     60          
     61          /* Private function prototypes -----------------------------------------------*/
     62          /* Private functions ---------------------------------------------------------*/
     63          
     64          /**
     65            * @brief  Callback routine of the dialog
     66            * @param  pMsg: pointer to a data structure of type WM_MESSAGE
     67            * @retval None
     68            */
     69          static void _cbDialog(WM_MESSAGE * pMsg) {
     70            WM_HWIN hItem;
     71            int Id, NCode;
     72            
     73            switch (pMsg->MsgId) {
     74            case WM_INIT_DIALOG:
     75              
     76              /* Initialization of 'System Information' */
     77              hItem = pMsg->hWin;
     78              FRAMEWIN_SetFont(hItem, GUI_FONT_13HB_ASCII);
     79              
     80              /* Initialization of 'Image' */
     81              hItem = WM_GetDialogItem(pMsg->hWin, ID_IMAGE_INFO);
     82              IMAGE_SetBitmap(hItem, bminfo);
     83              
     84              /* Initialization of 'Board : STM324x9I' */
     85              hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_BOARD);
     86              TEXT_SetFont(hItem, GUI_FONT_13HB_ASCII);
     87              TEXT_SetTextColor(hItem, 0x00804000);
     88              
     89              /* Initialization of 'Core: STM32F-4 Series' */
     90              hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_CORE);
     91              TEXT_SetFont(hItem, GUI_FONT_13HB_ASCII);
     92              TEXT_SetTextColor(hItem, 0x00804000);
     93              
     94              /* Initialization of 'Firmware Version : 1.0' */
     95              hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_CPU);
     96              TEXT_SetFont(hItem, GUI_FONT_13HB_ASCII);
     97              TEXT_SetTextColor(hItem, 0x00804000);
     98              
     99              /* Initialization of 'Copyright 2013 STMicroelectronics' */
    100              hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_VERSION);
    101              TEXT_SetFont(hItem, GUI_FONT_13HB_ASCII);
    102              TEXT_SetTextColor(hItem, 0x00804000);
    103              
    104              /* Initialization of 'CPU Speed : 168MHz' */
    105              hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_COPYRIGHT);
    106              TEXT_SetFont(hItem, GUI_FONT_13HB_ASCII);
    107              TEXT_SetTextColor(hItem, 0x00804000);
    108              
    109              /* Initialization of 'Close' */
    110              hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_INFO_CLOSE);
    111              BUTTON_SetFont(hItem, GUI_FONT_13HB_ASCII);
    112              
    113              break;
    114              
    115            case WM_NOTIFY_PARENT:
    116              Id    = WM_GetId(pMsg->hWinSrc);    /* Id of widget */
    117              NCode = pMsg->Data.v;               /* Notification code */
    118              switch (NCode) {
    119              case WM_NOTIFICATION_RELEASED:      /* React only if released */
    120                switch (Id) {
    121                case ID_BUTTON_INFO_CLOSE:
    122                  GUI_EndDialog(pMsg->hWin, 0);
    123                  break;
    124                }
    125                break;
    126              case WM_NOTIFICATION_CHILD_DELETED:
    127                WM_NotifyParent(WM_GetParent(pMsg->hWin), 0x500);
    128                break;    
    129              }
    130              break;
    131              
    132            default:
    133              WM_DefaultProc(pMsg);
    134              break;
    135            }
    136          }
    137          
    138          /**
    139            * @brief  DEMO_SystemInfo
    140            * @param  hWin: Window handle
    141            * @retval None
    142            */
    143          void DEMO_SystemInfo(WM_HWIN hWin)
    144          {
    145            GUI_CreateDialogBox(_aDialog, GUI_COUNTOF(_aDialog), _cbDialog, hWin, 0, 0);
    146          }
    147          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   DEMO_SystemInfo
        16   -> GUI_CreateDialogBox
      24   _cbDialog
         0   -> BUTTON_SetFont
        24   -> FRAMEWIN_SetFont
         0   -> GUI_EndDialog
        24   -> IMAGE_SetBitmap
        24   -> TEXT_SetFont
        24   -> TEXT_SetTextColor
         0   -> WM_DefaultProc
        24   -> WM_GetDialogItem
        24   -> WM_GetId
        24   -> WM_GetParent
         0   -> WM_NotifyParent


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable10
       4  ??DataTable10_1
       4  ??DataTable10_2
       4  ??DataTable10_3
      20  ?_0
       8  ?_1
      28  ?_2
      16  ?_3
      20  ?_4
      28  ?_5
      36  ?_6
       8  ?_7
      28  DEMO_SystemInfo
     224  _aDialog
     276  _cbDialog

 
 164 bytes in section .rodata
 544 bytes in section .text
 
 544 bytes of CODE  memory
 164 bytes of CONST memory

Errors: none
Warnings: none
