###############################################################################
#
# IAR ANSI C/C++ Compiler V7.30.1.7746/W32 for ARM        23/Nov/2014  02:11:05
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\Core\User\usbh_usr.c
#    Command line =  
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\Core\User\usbh_usr.c
#        -D USE_STDPERIPH_DRIVER -D STM32F429_439xx -D USE_STM32F429I_DISCO -D
#        USE_USB_OTG_HS -D USE_EMBEDDED_PHY -lcN
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\STM32F429I-Discovery_Demo\List\
#        --diag_suppress Pe111,Pa082 -o
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\STM32F429I-Discovery_Demo\Obj\
#        --debug --endian=little --cpu=Cortex-M4F -e --fpu=VFPv4_sp
#        --dlib_config "C:\Program Files\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\Config\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\Core\Devices\STM32F4xx\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\Core\User\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\Core\Demo\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\Core\Lib\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\Core\Test_Program\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\..\..\Libraries\STM32_USB_HOST_Library\Core\inc\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\..\..\Libraries\STM32_USB_HOST_Library\Class\MSC\inc\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\..\..\Libraries\STM32_USB_Device_Library\Core\inc\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\..\..\Libraries\STM32_USB_Device_Library\Class\MSC\inc\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\..\..\Libraries\STM32_USB_Device_Library\Class\HID\inc\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\..\..\Libraries\STM32_USB_Device_Library\Class\Audio\inc\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\..\..\Libraries\STM32_USB_OTG_Driver\inc\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\..\..\Utilities\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\..\..\Utilities\Common\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\..\..\Utilities\STM32F429i-Discovery\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\..\..\Utilities\Third_Party\fat_fs\inc\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\..\..\Utilities\Third_Party\FreeRTOS\Source\portable\IAR\ARM_CM4F\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\..\..\Utilities\Third_Party\FreeRTOS\Source\include\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\..\..\Libraries\STemWinLibrary522_4x9i\inc\
#        -I
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\..\..\..\Libraries\STemWinLibrary522_4x9i\Config\
#        -Ohs --use_c++_inline -I "C:\Program Files\IAR Systems\Embedded
#        Workbench 7.0\arm\CMSIS\Include\"
#    List file    =  
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\STM32F429I-Discovery_Demo\List\usbh_usr.lst
#    Object file  =  
#        C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\EWARM\STM32F429I-Discovery_Demo\Obj\usbh_usr.o
#
###############################################################################

C:\Users\MichaelXu\Desktop\STM32F429I-Discovery_FW_V1.0.1\Projects\Demonstration\Core\User\usbh_usr.c
      1          /**
      2            ******************************************************************************
      3            * @file    usbh_usr.c
      4            * @author  MCD Application Team
      5            * @version V1.0.1
      6            * @date    11-November-2013
      7            * @brief   USB Host User Functions
      8            ******************************************************************************
      9            * @attention
     10            *
     11            * <h2><center>&copy; COPYRIGHT 2013 STMicroelectronics</center></h2>
     12            *
     13            * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
     14            * You may not use this file except in compliance with the License.
     15            * You may obtain a copy of the License at:
     16            *
     17            *        http://www.st.com/software_license_agreement_liberty_v2
     18            *
     19            * Unless required by applicable law or agreed to in writing, software 
     20            * distributed under the License is distributed on an "AS IS" BASIS, 
     21            * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     22            * See the License for the specific language governing permissions and
     23            * limitations under the License.
     24            *
     25            ******************************************************************************
     26            */
     27          
     28          /* Includes ------------------------------------------------------------------*/
     29          #include "usbh_usr.h"
     30          #include "ff.h"
     31          #include "usbh_msc_core.h"
     32          #include "usbh_msc_scsi.h"
     33          #include "usbh_msc_bot.h"
     34          #include "ff.h"
     35          
     36          #ifdef FreeRTOS
     37          #include "FreeRTOS.h"
     38          #include "task.h"
     39          #include "semphr.h"
     40          #endif
     41          
     42          /* Private typedef -----------------------------------------------------------*/
     43          /* Private define ------------------------------------------------------------*/
     44          /* Private macro -------------------------------------------------------------*/
     45          /* Private variables ---------------------------------------------------------*/
     46          extern USB_OTG_CORE_HANDLE            USB_OTG_Core;
     47          extern USBH_HOST                      USB_Host;
     48          
     49          /*  Points to the DEVICE_PROP structure of current device */
     50          /*  The purpose of this register is to speed up the execution */
     51          
     52          USBH_Usr_cb_TypeDef USBH_USR_cb =
     53            {
     54              USBH_USR_Init,
     55              USBH_USR_DeInit,
     56              USBH_USR_DeviceAttached,
     57              USBH_USR_ResetDevice,
     58              USBH_USR_DeviceDisconnected,
     59              USBH_USR_OverCurrentDetected,
     60              USBH_USR_DeviceSpeedDetected,
     61              USBH_USR_Device_DescAvailable,
     62              USBH_USR_DeviceAddressAssigned,
     63              USBH_USR_Configuration_DescAvailable,
     64              USBH_USR_Manufacturer_String,
     65              USBH_USR_Product_String,
     66              USBH_USR_SerialNum_String,
     67              USBH_USR_EnumerationDone,
     68              USBH_USR_UserInput,
     69              USBH_USR_MSC_Application,
     70              USBH_USR_DeviceNotSupported,
     71              USBH_USR_UnrecoveredError
     72            };
     73          
     74          FATFS USBH_fatfs;
     75          uint32_t __IO USB_Host_Application_Ready;
     76          
     77          /*--------------- LCD Messages ---------------*/
     78          const uint8_t MSG_HOST_INIT[]        = "[USB] Host Library Initialized";
     79          const uint8_t MSG_DEV_ATTACHED[]     = "[USB] Device Attached ";
     80          const uint8_t MSG_DEV_DISCONNECTED[] = "[USB] Device Disconnected";
     81          const uint8_t MSG_DEV_ENUMERATED[]   = "[USB] Enumeration completed ";
     82          const uint8_t MSG_DEV_HIGHSPEED[]    = "[USB] High speed device detected";
     83          const uint8_t MSG_DEV_FULLSPEED[]    = "[USB] Full speed device detected";
     84          const uint8_t MSG_DEV_LOWSPEED[]     = "[USB] Low speed device detected";
     85          const uint8_t MSG_DEV_ERROR[]        = "[USB] Device fault ";
     86          
     87          const uint8_t MSG_MSC_CLASS[]      = "[USB] Mass storage device connected";
     88          const uint8_t MSG_HID_CLASS[]      = "[USB] HID device connected";
     89          const uint8_t MSG_DISK_SIZE[]      = "[USB] Size of the disk in MBytes: ";
     90          const uint8_t MSG_LUN[]            = "[USB] LUN Available in the device:";
     91          const uint8_t MSG_ROOT_CONT[]      = "[USB] Exploring disk flash ...";
     92          const uint8_t MSG_WR_PROTECT[]      = "[USB] The disk is write protected";
     93          const uint8_t MSG_UNREC_ERROR[]     = "[USB] UNRECOVERED ERROR STATE";
     94          
     95          
     96          /* Private function prototypes -----------------------------------------------*/
     97          /* Private functions ---------------------------------------------------------*/
     98          
     99          /**
    100            * @brief  Add the host lib initialization message to the console
    101            * @param  None
    102            * @retval None
    103            */
    104          void USBH_USR_Init(void)
    105          {
    106            USB_Host_Application_Ready = 0;
    107          }
    108          
    109          /**
    110            * @brief  Add the device attachement message to the console
    111            * @param  None
    112            * @retval None
    113            */
    114          void USBH_USR_DeviceAttached(void)
    115          {
    116          }
    117          
    118          
    119          /**
    120            * @brief  Add the unrecovered error message to the console
    121            * @param  None
    122            * @retval None
    123            */
    124          void USBH_USR_UnrecoveredError (void)
    125          {
    126          }
    127          
    128          
    129          /**
    130            * @brief Add the device disconnection message to the console and free 
    131            *        USB associated resources
    132            * @param  None
    133            * @retval None
    134            */
    135          void USBH_USR_DeviceDisconnected (void)
    136          {
    137            USB_Host_Application_Ready = 0;
    138            f_mount(0, NULL);
    139          }
    140          /**
    141            * @brief  callback of the device reset event
    142            * @param  None
    143            * @retval None
    144            */
    145          void USBH_USR_ResetDevice(void)
    146          {
    147          }
    148          
    149          
    150          /**
    151            * @brief  Add the device speed message to the console
    152            * @param  Device speed
    153            * @retval None
    154            */
    155          void USBH_USR_DeviceSpeedDetected(uint8_t DeviceSpeed)
    156          {
    157          }
    158          
    159          /**
    160            * @brief  Add the USB device vendor and MFC Ids to the console
    161            * @param  device descriptor
    162            * @retval None
    163            */
    164          void USBH_USR_Device_DescAvailable(void *DeviceDesc)
    165          {
    166          }
    167          
    168          /**
    169            * @brief  Device addressed event callbacak
    170            * @param  None
    171            * @retval None
    172            */
    173          void USBH_USR_DeviceAddressAssigned(void)
    174          {
    175          }
    176          
    177          /**
    178            * @brief  Add the device class description to the console
    179            * @param  Configuration descriptor
    180            * @retval None
    181            */
    182          void USBH_USR_Configuration_DescAvailable(USBH_CfgDesc_TypeDef * cfgDesc,
    183              USBH_InterfaceDesc_TypeDef *itfDesc,
    184              USBH_EpDesc_TypeDef *epDesc)
    185          {
    186          }
    187          
    188          /**
    189            * @brief  Add the MFC String to the console
    190            * @param  Manufacturer String
    191            * @retval None
    192            */
    193          void USBH_USR_Manufacturer_String(void *ManufacturerString)
    194          {
    195          }
    196          
    197          /**
    198            * @brief  Add the Product String to the console
    199            * @param  Product String
    200            * @retval None
    201            */
    202          void USBH_USR_Product_String(void *ProductString)
    203          {
    204          }
    205          
    206          /**
    207            * @brief  Add the Srial Number String to the console
    208            * @param  SerialNum_String
    209            * @retval None
    210            */
    211          void USBH_USR_SerialNum_String(void *SerialNumString)
    212          {
    213          }
    214          
    215          
    216          
    217          /**
    218            * @brief  Enumeration complete event callback
    219            * @param  None
    220            * @retval None
    221            */
    222          void USBH_USR_EnumerationDone(void)
    223          {
    224          }
    225          
    226          /**
    227            * @brief  Device is not supported callback
    228            * @param  None
    229            * @retval None
    230            */
    231          void USBH_USR_DeviceNotSupported(void)
    232          {
    233          }
    234          
    235          /**
    236            * @brief  User Action for application state entry callback
    237            * @param  None
    238            * @retval USBH_USR_Status : User response for key button
    239            */
    240          USBH_USR_Status USBH_USR_UserInput(void)
    241          {
    242            return USBH_USR_RESP_OK;
    243          }
    244          
    245          /**
    246            * @brief  Over Current Detected on VBUS
    247            * @param  None
    248            * @retval Staus
    249            */
    250          void USBH_USR_OverCurrentDetected (void)
    251          {
    252          }
    253          
    254          
    255          /**
    256            * @brief  Mass storage application main handler
    257            * @param  None
    258            * @retval Staus
    259            */
    260          int USBH_USR_MSC_Application(void)
    261          {
    262            char temp[40];
    263          
    264            if(USB_Host_Application_Ready == 0)
    265            {
    266              /* Initializes the File System*/
    267              if ( f_mount( 0, &USBH_fatfs ) != FR_OK )
    268              {
    269                /* efs initialisation fails*/
    270                USB_Host_Application_Ready = 1;
    271                return -1;
    272              }
    273              sprintf (temp, "[FS] USB Disk capacity:%d MB", (int)((USBH_MSC_Param.MSCapacity * \
    274                USBH_MSC_Param.MSPageLength) / 1024 / 1024));
    275          
    276              USB_Host_Application_Ready = 1;
    277            }
    278            return(0);
    279          }
    280          /**
    281            * @brief  De-init User state and associated variables
    282            * @param  None
    283            * @retval None
    284            */
    285          void USBH_USR_DeInit(void)
    286          {
    287            USB_Host_Application_Ready = 0;
    288          }
    289          
    290          /**
    291            * @brief  Handle Modules Background processes in the main task
    292            * @param  None
    293            * @retval None
    294          */
    295          void USBH_USR_BackgroundProcess (void)
    296          {
    297            if((USB_Host_Application_Ready == 0) || (HCD_IsDeviceConnected(&USB_OTG_Core) == 0))
    298            {
    299              USBH_Process(&USB_OTG_Core, &USB_Host);   
    300            }
    301          }
    302          /************************ (C) COPYRIGHT STMicroelectronics *****END OF FILE****/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   USBH_USR_BackgroundProcess
         8   -> HCD_IsDeviceConnected
         0   -> USBH_Process
       0   USBH_USR_Configuration_DescAvailable
       0   USBH_USR_DeInit
       0   USBH_USR_DeviceAddressAssigned
       0   USBH_USR_DeviceAttached
       0   USBH_USR_DeviceDisconnected
         0   -> f_mount
       0   USBH_USR_DeviceNotSupported
       0   USBH_USR_DeviceSpeedDetected
       0   USBH_USR_Device_DescAvailable
       0   USBH_USR_EnumerationDone
       0   USBH_USR_Init
      48   USBH_USR_MSC_Application
        48   -> f_mount
        48   -> sprintf
       0   USBH_USR_Manufacturer_String
       0   USBH_USR_OverCurrentDetected
       0   USBH_USR_Product_String
       0   USBH_USR_ResetDevice
       0   USBH_USR_SerialNum_String
       0   USBH_USR_UnrecoveredError
       0   USBH_USR_UserInput


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable20
       4  ??DataTable20_1
       4  ??DataTable20_2
       4  ??DataTable20_3
      32  ?_0
      24  MSG_DEV_ATTACHED
      28  MSG_DEV_DISCONNECTED
      32  MSG_DEV_ENUMERATED
      20  MSG_DEV_ERROR
      36  MSG_DEV_FULLSPEED
      36  MSG_DEV_HIGHSPEED
      32  MSG_DEV_LOWSPEED
      36  MSG_DISK_SIZE
      28  MSG_HID_CLASS
      32  MSG_HOST_INIT
      36  MSG_LUN
      36  MSG_MSC_CLASS
      32  MSG_ROOT_CONT
      32  MSG_UNREC_ERROR
      36  MSG_WR_PROTECT
      32  USBH_USR_BackgroundProcess
       2  USBH_USR_Configuration_DescAvailable
       8  USBH_USR_DeInit
       2  USBH_USR_DeviceAddressAssigned
       2  USBH_USR_DeviceAttached
      12  USBH_USR_DeviceDisconnected
       2  USBH_USR_DeviceNotSupported
       2  USBH_USR_DeviceSpeedDetected
       2  USBH_USR_Device_DescAvailable
       2  USBH_USR_EnumerationDone
       8  USBH_USR_Init
      60  USBH_USR_MSC_Application
       2  USBH_USR_Manufacturer_String
       2  USBH_USR_OverCurrentDetected
       2  USBH_USR_Product_String
       2  USBH_USR_ResetDevice
       2  USBH_USR_SerialNum_String
       2  USBH_USR_UnrecoveredError
       4  USBH_USR_UserInput
      72  USBH_USR_cb
     572  USB_Host_Application_Ready
          USBH_fatfs

 
 572 bytes in section .bss
  72 bytes in section .data
 476 bytes in section .rodata
 198 bytes in section .text
 
 198 bytes of CODE  memory
 476 bytes of CONST memory
 644 bytes of DATA  memory

Errors: none
Warnings: none
